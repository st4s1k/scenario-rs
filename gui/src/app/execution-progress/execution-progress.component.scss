@use '../../styles.scss';

:host {
  .execution-progress {
    display: grid;
    grid-template-columns: 1fr;

    .empty-state {
      padding: styles.$gap-large;
      text-align: center;
      color: styles.$secondary-color-lighter-60;
    }

    .status-indicator {
      display: inline-block;
      width: 8px;
      height: 8px;
      outline: 1px solid styles.$primary-color;
      border: 2px solid styles.$secondary-color;
      margin: 0 styles.$gap-small;

      &.executing {
        background-color: rgb(100, 149, 237);
      }

      &.completed {
        background-color: rgb(76, 175, 80);
      }

      &.failed {
        background-color: styles.$red;
      }
    }

    .task {
      display: grid;
      padding: styles.$gap-medium;
      gap: styles.$gap-medium;

      .task-item {
        display: grid;
        gap: styles.$gap-medium;

        .progress-bar {
          $progress-track-color: styles.$secondary-color;
          $progress-fill-color: styles.$primary-color;

          position: relative;
          overflow: hidden;
          height: 20px;

          &::before,
          &::after {
            content: attr(data-content);
            position: absolute;
            inset: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            white-space: nowrap;
            font-size: styles.$font-size-small;
            font-weight: 700;
          }

          &::before {
            z-index: 1;
            color: $progress-fill-color;
            background: $progress-track-color;
            border: 1px solid $progress-fill-color;
            box-sizing: border-box;
          }

          &::after {
            z-index: 2;
            color: $progress-track-color;
            background: $progress-fill-color;
            outline: 2px solid $progress-track-color;
            outline-offset: -3px;
            clip-path: inset(0 calc(100% - var(--progress-percentage, 0%)) 0 0);
            transition: clip-path 0.2s ease;
          }
        }

        info-block {
          .text-field {
            height: auto;
            border: none;

            &:focus {
              outline: none;
            }
          }

          textarea {
            background-color: styles.$secondary-color-lighter-5;
            border: none;
            padding: styles.$gap-small;
            field-sizing: content;
          }

          &.output textarea {
            max-height: 200px;
          }

          &.error textarea {
            background-color: transparent;
            color: styles.$red;

            $selection-color: color-mix(in srgb, styles.$red 70%, styles.$secondary-color-lighter-2);

            &::selection {
              background-color: $selection-color;
              color: styles.$secondary-color;
            }
          }
        }
      }
    }
  }

  .executing-indicator {
    display: grid;
    justify-content: center;
    margin-top: 8px;

    .dot-pulse {
      position: relative;
      display: inline-block;
      width: 8px;
      height: 8px;
      margin-right: 4px;
      background-color: styles.$primary-color;
      animation: pulse 1.5s infinite linear;

      &::before,
      &::after {
        content: '';
        display: inline-block;
        position: absolute;
        top: 0;
        width: 8px;
        height: 8px;
        margin-right: 4px;
        background-color: styles.$primary-color;
        opacity: 0.7;
      }

      &::before {
        left: -12px;
        animation: pulse 1.5s infinite linear -0.5s;
      }

      &::after {
        left: 12px;
        animation: pulse 1.5s infinite linear -1s;
      }
    }
  }

  @keyframes pulse {
    0% {
      opacity: 0.7;
    }

    50% {
      opacity: 0.2;
    }

    100% {
      opacity: 0.7;
    }
  }
}
